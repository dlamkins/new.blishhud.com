"use strict";(self.webpackChunknew_blishhud_com=self.webpackChunknew_blishhud_com||[]).push([[4924],{3905:(t,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>k});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},l=Object.keys(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var u=n.createContext({}),p=function(t){var e=n.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},s=function(t){var e=p(t.components);return n.createElement(u.Provider,{value:e},t.children)},m="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,l=t.originalType,u=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),m=p(r),d=a,k=m["".concat(u,".").concat(d)]||m[d]||c[d]||l;return r?n.createElement(k,o(o({ref:e},s),{},{components:r})):n.createElement(k,o({ref:e},s))}));function k(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i[m]="string"==typeof t?t:a,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8967:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const l={id:"mount",title:"Mount",hide_table_of_contents:!0},o=void 0,i={unversionedId:"markers/attributes/mount",id:"markers/attributes/mount",title:"Mount",description:"| Applies To | | Blish HUD | TacO |",source:"@site/docs/markers/attributes/mount.md",sourceDirName:"markers/attributes",slug:"/markers/attributes/mount",permalink:"/docs/markers/attributes/mount",draft:!1,tags:[],version:"current",frontMatter:{id:"mount",title:"Mount",hide_table_of_contents:!0}},u={},p=[{value:"Description",id:"description",level:2},{value:"Supported values",id:"supported-values",level:2},{value:"How it works",id:"how-it-works",level:2}],s={toc:p},m="wrapper";function c(t){let{components:e,...r}=t;return(0,a.kt)(m,(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Applies To"),(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Blish HUD"),(0,a.kt)("th",{parentName:"tr",align:null},"TacO"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("center",null,"Markers, Trails")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("center",null,"\u2714")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("center",null,"\u274c"))))),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Hides the marker or trail if the player is not currently riding one of the specified mounts.")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,a.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Example"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mount"),(0,a.kt)("td",{parentName:"tr",align:null},"Custom String Array"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'mount="jackal,raptor"')),(0,a.kt)("td",{parentName:"tr",align:null},"The mount(s) the marker or trail should be shown while riding.")))),(0,a.kt)("h2",{id:"supported-values"},"Supported values"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"jackal"),(0,a.kt)("li",{parentName:"ul"},"griffon"),(0,a.kt)("li",{parentName:"ul"},"springer"),(0,a.kt)("li",{parentName:"ul"},"skimmer"),(0,a.kt)("li",{parentName:"ul"},"raptor"),(0,a.kt)("li",{parentName:"ul"},"rollerbeetle"),(0,a.kt)("li",{parentName:"ul"},"warclaw"),(0,a.kt)("li",{parentName:"ul"},"skyscale")),(0,a.kt)("p",null,"This attribute supports providing an array of mounts (values separated by comma) meaning one or more values can be provided.  If any of the provided mounts are actively mounted, then the marker or trail is shown."),(0,a.kt)("h2",{id:"how-it-works"},"How it works"),(0,a.kt)("p",null,"The mumblelink API provides values indicating the active mount.  This state is updated in realtime anytime the player mounts or unmounts."))}c.isMDXComponent=!0}}]);