"use strict";(self.webpackChunknew_blishhud_com=self.webpackChunknew_blishhud_com||[]).push([[3077],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5361:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const l={id:"profession",title:"Profession",hide_table_of_contents:!0},i=void 0,o={unversionedId:"markers/attributes/profession",id:"markers/attributes/profession",title:"Profession",description:"| Applies To | | Blish HUD | TacO |",source:"@site/docs/markers/attributes/profession.md",sourceDirName:"markers/attributes",slug:"/markers/attributes/profession",permalink:"/docs/markers/attributes/profession",draft:!1,tags:[],version:"current",frontMatter:{id:"profession",title:"Profession",hide_table_of_contents:!0}},s={},p=[{value:"Description",id:"description",level:2},{value:"Supported values",id:"supported-values",level:2},{value:"How it works",id:"how-it-works",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Applies To"),(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Blish HUD"),(0,a.kt)("th",{parentName:"tr",align:null},"TacO"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("center",null,"Markers, Trails")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("center",null,"\u2714")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("center",null,"\u274c"))))),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Hides the marker or trail if the player is not currently one of the specified professions.")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,a.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Example"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"profession"),(0,a.kt)("td",{parentName:"tr",align:null},"Custom String Array"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'profession="thief,mesmer"')),(0,a.kt)("td",{parentName:"tr",align:null},"The profession(s) the marker or trail should be shown while using.")))),(0,a.kt)("h2",{id:"supported-values"},"Supported values"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"guardian"),(0,a.kt)("li",{parentName:"ul"},"warrior"),(0,a.kt)("li",{parentName:"ul"},"engineer"),(0,a.kt)("li",{parentName:"ul"},"ranger"),(0,a.kt)("li",{parentName:"ul"},"thief"),(0,a.kt)("li",{parentName:"ul"},"elementalist"),(0,a.kt)("li",{parentName:"ul"},"mesmer"),(0,a.kt)("li",{parentName:"ul"},"necromancer"),(0,a.kt)("li",{parentName:"ul"},"revenant")),(0,a.kt)("p",null,"This attribute supports providing an array of professions (values separated by comma) meaning one or more values can be provided.  If the player character is any of the provided professions the the marker or trail is shown."),(0,a.kt)("h2",{id:"how-it-works"},"How it works"),(0,a.kt)("p",null,"The mumblelink API provides values indicating the active character profession.  This state is updated in realtime."))}m.isMDXComponent=!0}}]);