"use strict";(self.webpackChunknew_blishhud_com=self.webpackChunknew_blishhud_com||[]).push([[7166],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),u=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=u(a),m=l,c=d["".concat(p,".").concat(m)]||d[m]||h[m]||o;return a?n.createElement(c,r(r({ref:t},s),{},{components:a})):n.createElement(c,r({ref:t},s))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=a.length,r=new Array(o);r[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:l,r[1]=i;for(var u=2;u<o;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3855:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=a(7462),l=(a(7294),a(3905));const o={id:"launch-options",title:"Launch Options"},r=void 0,i={unversionedId:"user/launch-options",id:"user/launch-options",title:"Launch Options",description:"Launch options allow you to set lower level settings in the overlay at launch.  These can be added to a Blish HUD shortcut or when launched from a console.",source:"@site/docs/user/launch-options.md",sourceDirName:"user",slug:"/user/launch-options",permalink:"/docs/user/launch-options",draft:!1,tags:[],version:"current",frontMatter:{id:"launch-options",title:"Launch Options"},sidebar:"UserGuides",previous:{title:"Portable Mode",permalink:"/docs/user/portable-mode"},next:{title:"Blish HUD has an opaque black background",permalink:"/docs/user/troubleshooting/731"}},p={},u=[{value:"Parameters",id:"parameters",level:2},{value:"-g, --startgw2 &lt;1 or 2&gt;",id:"-g---startgw2-1-or-2",level:3},{value:"-p, --process &lt;Gw2-64&gt;",id:"-p---process-gw2-64",level:3},{value:"-P, --pid &lt;pid&gt;",id:"-p---pid-pid",level:3},{value:"-w, --window &lt;ArenaNet_Dx_Window_Class&gt;",id:"-w---window-arenanet_dx_window_class",level:3},{value:"-s, --settings &lt;path\tosettingsdir&gt;",id:"-s---settings-pathtosettingsdir",level:3},{value:"-a, --progdata &lt;path\toprogramdata&gt;",id:"-a---progdata-pathtoprogramdata",level:3},{value:"-r, --ref &lt;path\to\ref.dat&gt;",id:"-r---ref-pathtorefdat",level:3},{value:"-m, --mumble &lt;MumbleLink&gt;",id:"-m---mumble-mumblelink",level:3},{value:"-f, --maxfps &lt;60&gt;",id:"-f---maxfps-60",level:3},{value:"-d, --debug",id:"-d---debug",level:3},{value:"-M, --module &lt;path\tomodule.bhm&gt;",id:"-m---module-pathtomodulebhm",level:3},{value:"Examples",id:"examples",level:2},{value:"Overlay a different application (esp. for testing)",id:"overlay-a-different-application-esp-for-testing",level:3},{value:"Save application settings in the current directory",id:"save-application-settings-in-the-current-directory",level:3},{value:"Debugging a module",id:"debugging-a-module",level:3},{value:"Packed module",id:"packed-module",level:4},{value:"Unpacked module",id:"unpacked-module",level:4}],s={toc:u},d="wrapper";function h(e){let{components:t,...o}=e;return(0,l.kt)(d,(0,n.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Launch options allow you to set lower level settings in the overlay at launch.  These can be added to a Blish HUD shortcut or when launched from a console."),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("h3",{id:"-g---startgw2-1-or-2"},"-g, --startgw2 <1 or 2",">"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},"0"))),(0,l.kt)("p",null,"Allows you to launch Guild Wars 2 along with Blish HUD."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"0 does nothing"),(0,l.kt)("li",{parentName:"ul"},"1 will start Guild Wars 2"),(0,l.kt)("li",{parentName:"ul"},"2 will start Guild Wars 2 with the autologin flag")),(0,l.kt)("h3",{id:"-p---process-gw2-64"},"-p, --process <Gw2-64",">"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},"Gw2-64"))),(0,l.kt)("p",null,"The name of the process the overlay will be waiting for (without ",(0,l.kt)("inlineCode",{parentName:"p"},".exe"),"). This parameter is used in conjunction with -w, --window."),(0,l.kt)("h3",{id:"-p---pid-pid"},"-P, --pid <pid",">"),(0,l.kt)("p",null,"The PID of the process the overlay will be waiting for to overlay.  Has a higher priority than -p, --process but a lower priority than -m, --mumble."),(0,l.kt)("h3",{id:"-w---window-arenanet_dx_window_class"},"-w, --window <ArenaNet_Dx_Window_Class",">"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},"ArenaNet_Dx_Window_Class"))),(0,l.kt)("p",null,"The name of the window Blish HUD should overlay. This parameter is used in conjunction with -p, --process."),(0,l.kt)("h3",{id:"-s---settings-pathtosettingsdir"},"-s, --settings <path\\to\\settings\\dir",">"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},"%userprofile%\\Documents\\Guild Wars 2\\addons\\blishhud"))),(0,l.kt)("p",null,"The directory where Blish HUD should load and save settings and other persistent data from/to."),(0,l.kt)("h3",{id:"-a---progdata-pathtoprogramdata"},"-a, --progdata <path\\to\\programdata>"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Introduced in Blish HUD v1.1.2")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},"%programdata%\\Blish HUD\\"))),(0,l.kt)("p",null,"The path where Blish HUD will save non-user data such as cached textures."),(0,l.kt)("h3",{id:"-r---ref-pathtorefdat"},"-r, --ref <path\\to\\ref.dat",">"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},".\\ref.dat"))),(0,l.kt)("p",null,"The path to the ref.dat file which primarily contains texture and audio assets for Blish HUD. "),(0,l.kt)("h3",{id:"-m---mumble-mumblelink"},"-m, --mumble <MumbleLink",">"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},"MumbleLink"))),(0,l.kt)("p",null,"The name of the Mumble Link target that Blish HUD should be reading from (if you are using the ",(0,l.kt)("inlineCode",{parentName:"p"},"-mumble")," parameter with Guild Wars 2)."),(0,l.kt)("h3",{id:"-f---maxfps-60"},"-f, --maxfps <60",">"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},"60"))),(0,l.kt)("p",null,"Allows you to set the max target FPS (mutually exclusive with --unlockfps)."),(0,l.kt)("h3",{id:"-d---debug"},"-d, --debug"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Default: ",(0,l.kt)("inlineCode",{parentName:"em"},"false"))),(0,l.kt)("p",null,"When enabled:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Shows FPS and other timings in the top-right corner."),(0,l.kt)("li",{parentName:"ul"},"Module exceptions are rethrown (where they would otherwise be handled) to enable debugging Modules easier."),(0,l.kt)("li",{parentName:"ul"},"Sets the minimum output log level to DEBUG.")),(0,l.kt)("h3",{id:"-m---module-pathtomodulebhm"},"-M, --module <path\\to\\module.bhm",">"),(0,l.kt)("p",null,"Expects the path to a Blish HUD module file (.bhm) OR the path to a directory which contains an unpacked module.  When specified, Blish HUD will load this module and attempt to enable it when launched.  Useful when developing modules."),(0,l.kt)("p",null,"If using a directory, be sure that your path does not end in ",(0,l.kt)("inlineCode",{parentName:"p"},"\\")," otherwise the closing double quote will be escaped."),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"overlay-a-different-application-esp-for-testing"},"Overlay a different application (esp. for testing)"),(0,l.kt)("p",null,"Identify the process name and window name.  Window Spy (a utility that comes with ",(0,l.kt)("a",{parentName:"p",href:"https://www.autohotkey.com/download/"},"AutoHotKey"),") does a good job of acquiring the required info."),(0,l.kt)("p",null,(0,l.kt)("img",{src:a(2090).Z,width:"1453",height:"542"})),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'".\\Blish HUD.exe" --process powershell --window ConsoleWindowClass')," will have Blish HUD overlay a PowerShell window."),(0,l.kt)("h3",{id:"save-application-settings-in-the-current-directory"},"Save application settings in the current directory"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'".\\Blish HUD.exe" --settings .\\')),(0,l.kt)("h3",{id:"debugging-a-module"},"Debugging a module"),(0,l.kt)("h4",{id:"packed-module"},"Packed module"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'".\\Blish HUD.exe" --module "C:\\Source\\MyNewModule\\bin\\Debug\\MyNewModule.bhm" --debug')),(0,l.kt)("h4",{id:"unpacked-module"},"Unpacked module"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'".\\Blish HUD.exe" --module "C:\\Source\\MyNewModule\\bin\\Debug" --debug')))}h.isMDXComponent=!0},2090:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/launch-options-0210353cdf0f59f6ca8f2dfd3c28c80e.png"}}]);